<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.worm.little.mapper.CrawlCommentXiaomiMapper">
    <resultMap id="BaseResultMap" type="com.worm.little.entity.CrawlCommentXiaomi">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="game_code" property="gameCode" jdbcType="BIGINT"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="viewpoint_id" property="viewpointId" jdbcType="VARCHAR"/>
        <result column="uuid" property="uuid" jdbcType="INTEGER"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <result column="like_count" property="likeCount" jdbcType="INTEGER"/>
        <result column="reply_count" property="replyCount" jdbcType="INTEGER"/>
        <result column="view_count" property="viewCount" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="play_duration" property="playDuration" jdbcType="BIGINT"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="top_reply" property="topReply" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from crawl_comment_xiaomi
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.worm.little.entity.CrawlCommentXiaomi">
    insert into crawl_comment_xiaomi (id, user_id, game_code, sort, viewpoint_id,
      uuid, nickname, sex, 
      score, like_count, reply_count, 
      view_count, create_time, update_time, 
      play_duration, content, top_reply
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{gameCode,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{viewpointId,jdbcType=VARCHAR},
      #{uuid,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, #{replyCount,jdbcType=INTEGER}, 
      #{viewCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{playDuration,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR}, #{topReply,jdbcType=LONGVARCHAR}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.worm.little.entity.CrawlCommentXiaomi">
    update crawl_comment_xiaomi
    set user_id = #{userId,jdbcType=BIGINT},
      game_code = #{gameCode,jdbcType=BIGINT},
      sort = #{sort,jdbcType=INTEGER},
      viewpoint_id = #{viewpointId,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      reply_count = #{replyCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      play_duration = #{playDuration,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR},
      top_reply = #{topReply,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, user_id, game_code, sort, viewpoint_id, uuid, nickname, sex, score, like_count, reply_count,
    view_count, create_time, update_time, play_duration, content, top_reply
    from crawl_comment_xiaomi
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, game_code, sort, viewpoint_id, uuid, nickname, sex, score, like_count, reply_count,
    view_count, create_time, update_time, play_duration, content, top_reply
    from crawl_comment_xiaomi
  </select>
    <!--批量新增-->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into crawl_comment_xiaomi (
        id, user_id, game_code, sort,
        viewpoint_id, uuid, nickname, sex,
        score, like_count, reply_count,
        view_count, create_time, update_time,
        play_duration, content, top_reply
        ) values
        <foreach collection="list" item="it" separator=",">
            (
            #{it.id,jdbcType=BIGINT}, #{it.userId,jdbcType=BIGINT}, #{it.gameCode,jdbcType=INTEGER}, #{it.sort,jdbcType=INTEGER},
            #{it.viewpointId,jdbcType=VARCHAR}, #{it.uuid,jdbcType=INTEGER}, #{it.nickname,jdbcType=VARCHAR}, #{it.sex,jdbcType=VARCHAR},
            #{it.score,jdbcType=INTEGER}, #{it.likeCount,jdbcType=INTEGER}, #{it.replyCount,jdbcType=INTEGER},
            #{it.viewCount,jdbcType=INTEGER}, #{it.createTime,jdbcType=TIMESTAMP}, #{it.updateTime,jdbcType=TIMESTAMP},
            #{it.playDuration,jdbcType=BIGINT}, #{it.content,jdbcType=LONGVARCHAR}, #{it.topReply,jdbcType=LONGVARCHAR}
            )
        </foreach>
    </insert>
    <!--获取存储的最新评论-->
    <select id="getLastComment" resultMap="BaseResultMap" parameterType="java.util.Map">
    select id, user_id, game_code, sort, viewpoint_id, uuid, nickname, sex, score, like_count, reply_count,
            view_count, create_time, update_time, play_duration, content, top_reply
    from crawl_comment_xiaomi
    where game_code = #{gameCode,jdbcType=BIGINT}
    and user_id = #{userId,jdbcType=BIGINT}
    and sort = (
      select max(sort)
      from crawl_comment_xiaomi
      where game_code = #{gameCode,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
    )
    </select>
    <!--获取评论-->
    <select id="getCommentList" resultMap="BaseResultMap" parameterType="java.util.Map">
    select id, user_id, game_code, sort, viewpoint_id, uuid, nickname, sex, score, like_count, reply_count,
            view_count, create_time, update_time, play_duration, content, top_reply
    from crawl_comment_xiaomi
    where 1=1
    <if test="gameCode != null">
        and game_code = #{gameCode,jdbcType=BIGINT}
    </if>
    <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
    </if>
    <if test="startDate != null and startDate != ''">
        and update_time &gt;=  #{startDate,jdbcType=VARCHAR}
    </if>
    <if test="endDate != null and endDate != ''">
        and update_time &lt;=  #{endDate,jdbcType=VARCHAR}
    </if>
    order by sort desc
    </select>

    <delete id="deleteCommentByParam" parameterType="java.util.Map">
    delete from crawl_comment_xiaomi
    where user_id = #{userId,jdbcType=BIGINT}
        <if test="gameCode != null">
            and game_code = #{gameCode,jdbcType=BIGINT}
        </if>
        <if test="startDate != null and startDate != ''">
            and update_time &gt;=  #{startDate,jdbcType=VARCHAR}
        </if>
        <if test="endDate != null and endDate != ''">
            and update_time &lt;=  #{endDate,jdbcType=VARCHAR}
        </if>
    </delete>
</mapper>